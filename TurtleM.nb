(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     13983,        407]
NotebookOptionsPosition[     12492,        353]
NotebookOutlinePosition[     12845,        369]
CellTagsIndexPosition[     12802,        366]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"$defaultTurtleState", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "0", ",", "True"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6792702421352053`*^9, 3.679270249364279*^9}, {
  3.679270287727044*^9, 3.679270302585194*^9}, {3.679270562435882*^9, 
  3.6792705893500347`*^9}, {3.679301730475651*^9, 3.679301746387615*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"turtleProc", "[", 
   RowBox[{"proc", ":", 
    RowBox[{"{", "__", "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"{", 
    RowBox[{"turtleStates", ","}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.679219388806863*^9, 3.679219400784099*^9}, {
   3.679219430807289*^9, 3.679219430880254*^9}, {3.679219733398944*^9, 
   3.679219733632616*^9}, {3.679219924632753*^9, 3.6792199341034*^9}, {
   3.679270084358384*^9, 3.6792700913732443`*^9}, 3.6792702214981823`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_"}], "}"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "]"}], ";", "a"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6792698897470093`*^9, 3.679269923889666*^9}, {
  3.6792699564038258`*^9, 3.679269956481866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", "=", 
     RowBox[{"{", "0", "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"list", ",", 
        RowBox[{"w", "[", 
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Last", "[", "list", "]"}]}], "}"}], "]"}]}], "]"}], "&"}],
      "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";", 
    "list"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.679269643242641*^9, 3.679269660884225*^9}, {
  3.6792698064787416`*^9, 3.679269894179426*^9}, {3.679269941878124*^9, 
  3.679269942182501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.679269926412129*^9, 3.679269958350479*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{{3.679269926412129*^9, 3.679269958356579*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{{3.679269926412129*^9, 3.679269958364102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{{3.679269926412129*^9, 3.679269958366642*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "4"}], "}"}]], "Print",
 CellChangeTimes->{{3.679269926412129*^9, 3.679269958369132*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.679269942500984*^9, 3.6792699583754797`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"forward", "[", 
   RowBox[{"state_List", ",", "distance_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"state", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"state", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"distance", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"distance", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}], "+", 
        RowBox[{"state", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], ",", "Nothing"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.679302484911538*^9, 3.6793025383385143`*^9}, {
  3.679302583710685*^9, 3.679302660668715*^9}, {3.6793027316599293`*^9, 
  3.679302808885009*^9}}],

Cell[CellGroupData[{

Cell["2016/9/3", "Subsubsection",
 CellChangeTimes->{{3.6818851683926992`*^9, 3.681885172403541*^9}}],

Cell["\<\
The most simple target is to generate the same figure as turtle, while no \
animation is required. This can be done with the forward function hjiaa \
wrote, after converting the python code to a custom Mathematica style \
instructions; or with the function AnglePath.\
\>", "Text",
 CellChangeTimes->{{3.681885176246531*^9, 3.681885281474613*^9}, {
  3.6818853452471848`*^9, 3.6818853611866913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnglePath", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.2", ",", 
      RowBox[{"90.", "\[Degree]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.1", ",", 
      RowBox[{"130.", "\[Degree]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.7", ",", 
      RowBox[{
       RowBox[{"-", "85."}], "\[Degree]"}]}], "}"}]}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.68188536477115*^9, 3.681885382011495*^9}},
 CellLabel->"In[79]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.347880794884119`*^-17", ",", "1.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6086933305498539`"}], ",", 
     RowBox[{"-", "0.14985398034173247`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.103668077380437`"}], ",", "0.3451207664888508`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.681885382414317*^9},
 CellLabel->"Out[79]="]
}, Open  ]],

Cell["This function basically converts length-angle to point data.", "Text",
 CellChangeTimes->{{3.681885394696917*^9, 3.6818854185669394`*^9}, 
   3.681885489959659*^9, {3.681885577199958*^9, 3.681885709310957*^9}}],

Cell["\<\
With animation, the job can be done with Animate or Dynamic. Animate function \
has poor interactive ability, hence Dynamic is selected, for later extensions \
with mouse clicks/positions.\
\>", "Text",
 CellChangeTimes->{3.681885722141553*^9}],

Cell["", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["20160904", "Subsubsection",
 CellChangeTimes->{{3.681981289622567*^9, 3.681981295785836*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "hamstersBearSRC", "=", 
   "\"\<import turtle\nturtle.reset()\n\nturtle.hideturtle()\nturtle.speed(8)\
\nturtle.up()\nturtle.goto(0,-15)\nturtle.down()\nturtle.circle(5)\n\n\
turtle.up()\nturtle.goto(0,-100)\nturtle.down()\nturtle.circle(100)\n\
turtle.up()\nturtle.goto(-60,-2)\nturtle.down()\nturtle.circle(2)\n\n\
turtle.up()\nturtle.goto(60,-2)\nturtle.down()\nturtle.circle(2)\n\n\
turtle.up()\nturtle.goto(0,-15)\nturtle.right(90)\nturtle.down()\n\
turtle.circle(7,120)\nturtle.up()\nturtle.goto(0,-15)\nturtle.right(120)\n\
turtle.down()\nturtle.circle(-7,120)\n\nturtle.up()\nturtle.goto(-60,80)\n\
turtle.down()\nturtle.right(27.3)\nturtle.circle(20,209)\n\nturtle.up()\n\
turtle.goto(60,80)\nturtle.down()\nturtle.left(85.6)\nturtle.circle(-20,209)\n\
\nturtle.done()\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.681981402764717*^9, 3.681981419959528*^9}},
 CellLabel->"In[38]:="],

Cell["\<\
A python parser is needed, but it is too complicated. Therefore it will be \
developed only on demand.
This code example is very simple, there is even no indentation which needs \
converting to brackets (free of any looping constructs).\
\>", "Text",
 CellChangeTimes->{{3.6819820000592203`*^9, 3.681982051257702*^9}, {
  3.681982232252907*^9, 3.681982252872607*^9}, {3.681982341764433*^9, 
  3.681982389544532*^9}}],

Cell["\<\
There are three things to achieve: extract all valid expressions by line, \
recognize convertible(valid) turtle functions and convert to the Mathematica \
intermediate functions, and deal with simple python expressions (numbers, \
arithmetic). \
\>", "Text",
 CellChangeTimes->{{3.6819824057233763`*^9, 3.6819825894177*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.68199518862801*^9, 3.681995192480915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pyins", "=", 
  RowBox[{
   RowBox[{"StringSplit", "[", 
    RowBox[{"hamstersBearSRC", ",", "\"\<\\n\>\""}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<\>\"", "\[RuleDelayed]", "Nothing"}], ",", 
     RowBox[{
      RowBox[{"\"\< \>\"", ".."}], "\[Rule]", "\"\<\>\""}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"removes", " ", "empty", " ", "lines"}], ",", " ", 
    RowBox[{"removes", " ", "extra", " ", "spaces"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.681985542340073*^9, 3.681985546634177*^9}, {
  3.6819860886344*^9, 3.681986094717496*^9}, {3.6819945980930758`*^9, 
  3.681994604522593*^9}, {3.681994936587048*^9, 3.681994943569241*^9}, {
  3.681995174541191*^9, 3.681995209808134*^9}},
 CellLabel->"In[46]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"import turtle\"\>", ",", "\<\"turtle.reset()\"\>", 
   ",", "\<\"turtle.hideturtle()\"\>", ",", "\<\"turtle.speed(8)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(0,-15)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.circle(5)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(0,-100)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.circle(100)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(-60,-2)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.circle(2)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(60,-2)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.circle(2)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(0,-15)\"\>", 
   ",", "\<\"turtle.right(90)\"\>", ",", "\<\"turtle.down()\"\>", 
   ",", "\<\"turtle.circle(7,120)\"\>", ",", "\<\"turtle.up()\"\>", 
   ",", "\<\"turtle.goto(0,-15)\"\>", ",", "\<\"turtle.right(120)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.circle(-7,120)\"\>", 
   ",", "\<\"turtle.up()\"\>", ",", "\<\"turtle.goto(-60,80)\"\>", 
   ",", "\<\"turtle.down()\"\>", ",", "\<\"turtle.right(27.3)\"\>", 
   ",", "\<\"turtle.circle(20,209)\"\>", ",", "\<\"turtle.up()\"\>", 
   ",", "\<\"turtle.goto(60,80)\"\>", ",", "\<\"turtle.down()\"\>", 
   ",", "\<\"turtle.left(85.6)\"\>", ",", "\<\"turtle.circle(-20,209)\"\>", 
   ",", "\<\"turtle.done()\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.681986095294389*^9, 3.681994604856288*^9, 
  3.681994944319586*^9, 3.681995178344081*^9, 3.6819952106009483`*^9},
 CellLabel->"Out[46]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"check", " ", "imports"}], ",", " ", 
    RowBox[{"returns", " ", "module", " ", "name", 
     RowBox[{"(", 
      RowBox[{"includes", " ", "period"}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{"pyins", ",", "\"\<from turtle import *\>\""}], "]"}], ",", 
    "\"\<\>\"", ",", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"pyins", ",", "\"\<import turtle\>\""}], "]"}], ",", 
    "\"\<turtle.\>\"", ",", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"pyins", ",", 
      RowBox[{"\"\<import turtle as \>\"", "~~", "_"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"pyins", ",", 
       RowBox[{
        RowBox[{"\"\<import turtle as \>\"", "~~", "a_"}], "\[RuleDelayed]", 
        RowBox[{"a", "<>", "\"\<.\>\""}]}]}], "]"}], "//", "First"}], ",", 
    "True", ",", 
    RowBox[{"Abort", "[", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6819952191567583`*^9, 3.681995226709634*^9}, {
  3.6819952625145493`*^9, 3.681995387360591*^9}, {3.681995636667222*^9, 
  3.6819956858004417`*^9}, {3.6819957336101437`*^9, 3.681995754437777*^9}},
 CellLabel->"In[49]:="],

Cell[BoxData["\<\"turtle.\"\>"], "Output",
 CellChangeTimes->{{3.6819957269735117`*^9, 3.681995758901298*^9}},
 CellLabel->"Out[49]="]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1436, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 417, 10, 48, "Input"],
Cell[978, 32, 514, 11, 48, "Input"],
Cell[1495, 45, 382, 11, 48, "Input"],
Cell[CellGroupData[{
Cell[1902, 60, 702, 21, 48, "Input"],
Cell[CellGroupData[{
Cell[2629, 85, 138, 3, 36, "Print"],
Cell[2770, 90, 138, 3, 36, "Print"],
Cell[2911, 95, 138, 3, 36, "Print"],
Cell[3052, 100, 138, 3, 36, "Print"],
Cell[3193, 105, 138, 3, 36, "Print"]
}, Open  ]],
Cell[3346, 111, 184, 4, 48, "Output"]
}, Open  ]],
Cell[3545, 118, 1039, 29, 80, "Input"],
Cell[CellGroupData[{
Cell[4609, 151, 101, 1, 52, "Subsubsection"],
Cell[4713, 154, 410, 7, 76, "Text"],
Cell[CellGroupData[{
Cell[5148, 165, 489, 16, 48, "Input"],
Cell[5640, 183, 524, 16, 51, "Output"]
}, Open  ]],
Cell[6179, 202, 216, 2, 46, "Text"],
Cell[6398, 206, 254, 5, 76, "Text"],
Cell[6655, 213, 16, 0, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6708, 218, 99, 1, 52, "Subsubsection"],
Cell[6810, 221, 932, 16, 1537, "Input"],
Cell[7745, 239, 426, 8, 76, "Text"],
Cell[8174, 249, 334, 6, 76, "Text"],
Cell[8511, 257, 81, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[8617, 262, 819, 20, 111, "Input"],
Cell[9439, 284, 1620, 25, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11096, 314, 1231, 31, 142, "Input"],
Cell[12330, 347, 134, 2, 48, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

